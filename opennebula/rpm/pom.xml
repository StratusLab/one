<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
         
  <modelVersion>4.0.0</modelVersion>
  
  <artifactId>one-3.2-StratusLab-rpm</artifactId>  
  <name>OpenNebula (RPM)</name>

  <packaging>rpm</packaging>

  <parent>
    <groupId>eu.stratuslab.vmm</groupId>
    <artifactId>one-3.2-StratusLab</artifactId>  
    <version>14.06.0-SNAPSHOT</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>eu.stratuslab.vmm</groupId>
      <artifactId>one-3.2-StratusLab-tar</artifactId>
      <classifier>distribution</classifier>
      <type>tar.gz</type>
      <version>14.06.0-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <properties>
    <maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format>
    <RELEASE>0.${maven.build.timestamp}.${package.os}</RELEASE>
  </properties>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>

        <executions>

          <execution>
            <id>unpack-distribution</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
	    <phase>generate-sources</phase>
            <configuration>
	      <outputDirectory>${basedir}/target/distribution</outputDirectory>
            </configuration>
          </execution>

        </executions>

      </plugin>

      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>rpm-maven-plugin</artifactId>
	<extensions>true</extensions>
	<configuration>
	  <release>${RELEASE}</release>
	  <summary>OpenNebula</summary>
	  <name>one-3.2-StratusLab</name>
	  <group>System</group>
	  <vendor>StratusLab</vendor>
	  <packager>StratusLab</packager>
	  <copyright>Apache</copyright>
	  <url>http://opennebula.org/</url>
	  <conflicts>
	    <conflict>one-2.0-StratusLab</conflict>
	    <conflict>one-2.2-StratusLab</conflict>
	    <conflict>one-3.0-StratusLab</conflict>
	  </conflicts>
	  <provides>
	    <provide>opennebula</provide>
	    <provide>one</provide>
	  </provides>
	  <requires>
	    <require>quarantine-cleanup</require>
	    <require>openssl</require>
	    <require>ruby &gt;= 1.8.6.287</require>
	    <require>mkisofs</require>
	    <require>mysql-libs</require>
	    <require>ruby-mysql</require>
	    <require>rubygem-sequel</require>
	    <require>rubygem-stomp</require>
	    <require>xmlrpc-c</require>
	    <require>xmlrpc-c-c++</require>
	    <require>xmlrpc-c-client</require>
	    <require>xmlrpc-c-client++</require>
	    <require>qemu-img</require>
	    <!--
	    SunStone. NB! Sinatra >=1.3.2 is required. Should be installed with 'gem install sinatra'.
	    -->
	    <require>rubygem-json</require>
	    <require>ruby-sqlite3</require>
	  </requires>
	  <needarch>x86_64</needarch>
	  <description>
OpenNebula is a Virtual Infrastructure Manager that orchestrates storage,
network and virtualization technologies to enable the dynamic placement of
multi-tier services (groups of interconnected virtual machines) on distributed
infrastructures, combining both data center resources and remote cloud
resources, according to allocation policies. OpenNebula provides internal and
Cloud administration and user interfaces for the full management of the Cloud
platform.

OpenNebula is free software released under the Apache License.

Note: This is the StratusLab distribution of OpenNebula which may differ
from the version released directly by the OpenNebula project. 
	  </description>
	  <preinstallScriptlet>
	    <script>
if ! grep -q ^cloud /etc/group
then
  /usr/sbin/groupadd -g 9000 -f cloud
fi
if ! grep -q ^oneadmin /etc/passwd
then
  /usr/sbin/useradd -u 9000 -g cloud -s /bin/bash oneadmin 2&gt;/dev/null
fi

authdir=~oneadmin/.one
file=$${authdir}/one_auth

mkdir -p $${authdir}

if [ ! -e $${file} ]; then
  password=`base64 &lt; /dev/urandom | tr -d '+/\r\n0-9' | head -c 8`
  echo "oneadmin:$${password}" &gt; $${file}
fi

if [ -e $${authdir} ]; then
  chown oneadmin:cloud $${authdir}
  chmod 0700 $${authdir}
fi

if [ -e $${file} ]; then
  chown oneadmin:cloud $${file}
  chmod 0600 $${file}
fi
	    </script>
	  </preinstallScriptlet>
	  <postinstallScriptlet>
	    <script>/sbin/ldconfig</script>
	  </postinstallScriptlet>
	  <postremoveScriptlet>
	    <script>/sbin/ldconfig</script>
	  </postremoveScriptlet>
 	  <mappings>

	    <mapping>
	      <directory>/var/lock/one</directory>
	      <filemode>755</filemode>
	      <username>oneadmin</username>
	      <groupname>cloud</groupname>
	      <directoryIncluded>true</directoryIncluded>
	    </mapping>

	    <mapping>
	      <directory>/var/log/one</directory>
	      <filemode>755</filemode>
	      <username>oneadmin</username>
	      <groupname>cloud</groupname>
	      <directoryIncluded>true</directoryIncluded>
	    </mapping>

	    <mapping>
	      <directory>/var/run/one</directory>
	      <filemode>755</filemode>
	      <username>oneadmin</username>
	      <groupname>cloud</groupname>
	      <directoryIncluded>true</directoryIncluded>
	    </mapping>

	    <mapping>
	      <directory>/var/lib/one</directory>
	      <filemode>755</filemode>
	      <username>oneadmin</username>
	      <groupname>cloud</groupname>
	      <directoryIncluded>true</directoryIncluded>
	    </mapping>

	    <mapping>
	      <directory>/var/lib/one/images</directory>
	      <filemode>3770</filemode>
	      <username>oneadmin</username>
	      <groupname>cloud</groupname>
	      <directoryIncluded>true</directoryIncluded>
	    </mapping>

	    <mapping>
	      <directory>/var/lib/one/vms</directory>
	      <filemode>3770</filemode>
	      <username>oneadmin</username>
	      <groupname>cloud</groupname>
	      <directoryIncluded>true</directoryIncluded>
	    </mapping>

	    <mapping>
	      <directory>/var/lib/one/remotes</directory>
	      <filemode>755</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>true</directoryIncluded>
	      <sources>
	        <source>
	          <location>target/distribution/var/lib/one/remotes</location>
	          <includes>
	            <include>**/*</include>
	          </includes>
	        </source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/etc/init.d/</directory>
	      <filemode>755</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>false</directoryIncluded>
	      <sources>
	        <source>
	          <location>target/distribution/etc/init.d</location>
	          <includes>
	            <include>**/*</include>
	          </includes>
	        </source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/var/share/stratuslab/context</directory>
	      <filemode>755</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>false</directoryIncluded>
	      <sources>
	        <source>
	          <location>target/distribution/var/share/stratuslab/context</location>
	          <includes>
	            <include>init.sh</include>
	            <include>epilog.sh</include>
	            <include>prolog.sh</include>
	          </includes>
	        </source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/etc</directory>
	      <filemode>644</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <configuration>true</configuration>
	      <directoryIncluded>false</directoryIncluded>
	      <sources>
		<source>
		  <location>target/distribution/etc</location>
		  <includes>
		    <include>**/*</include>
		  </includes>
		  <excludes>
		    <exclude>init.d/**/*</exclude>
		  </excludes>
		</source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/usr/bin</directory>
	      <filemode>755</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>false</directoryIncluded>
	      <sources>
		<source>
		  <location>target/distribution/usr/bin</location>
		  <includes>
		    <include>**/*</include>
		  </includes>
		</source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/usr/sbin</directory>
	      <filemode>755</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>false</directoryIncluded>
	      <sources>
		<source>
		  <location>target/distribution/usr/sbin</location>
		  <includes>
		    <include>**/*</include>
		  </includes>
		</source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/usr/lib</directory>
	      <filemode>755</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>false</directoryIncluded>
	      <sources>
		<source>
		  <location>target/distribution/usr/lib</location>
		  <includes>
		    <include>**/*</include>
		  </includes>
		</source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/usr/share</directory>
	      <filemode>644</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>false</directoryIncluded>
	      <documentation>true</documentation>
	      <sources>
	        <source>
	          <location>target/distribution/usr/share</location>
	          <includes>
	            <include>**/*</include>
	          </includes>
	          <excludes>
	            <exclude>one/hooks/**/*</exclude>
	          </excludes>
	        </source>
	      </sources>
	    </mapping>

	    <mapping>
	      <directory>/usr/share/one/hooks</directory>
	      <filemode>755</filemode>
	      <username>root</username>
	      <groupname>root</groupname>
	      <directoryIncluded>false</directoryIncluded>
	      <documentation>true</documentation>
	      <sources>
	        <source>
	          <location>target/distribution/usr/share/one/hooks</location>
	          <includes>
	            <include>**/*</include>
	          </includes>
	        </source>
	      </sources>
	    </mapping>

	  </mappings>
	</configuration>

      </plugin>

    </plugins>
  </build>

</project>
